[{"question": "Is the vehicle in the top of the image?", "code": "def execute_command(image) -> str:\n    image_patch = ImagePatch(image)\n    # Assume there's only one vehicle patch.\n    vehicle_patch = image_patch.find(\"vehicle\")[0]\n    vehicle_in_top_half = vehicle_patch.vertical_center > image_patch.vertical_center\n    return bool_to_yesno(vehicle_in_top_half)"}, {"question": "Are there trains or fences in this scene?", "code": "def execute_command(image) -> str:\n    image_patch = ImagePatch(image)\n    trains = image_patch.find(\"train\")\n    fences = image_patch.find(\"fence\")\n    has_trains_or_fences = len(trains) > 0 or len(fences) > 0\n    return bool_to_yesno(has_trains_or_fences)"}, {"question": "What color is the curtain that is to the right of the mirror?", "code": "def execute_command(image) -> str:\n    image_patch = ImagePatch(image)\n    mirror_patches = image_patch.find(\"mirror\")\n    mirror_patch = mirror_patches[0]\n    right_of_mirror_patch = image_patch.crop_right_of_bbox(\n        mirror_patch.left, mirror_patch.lower, mirror_patch.right, mirror_patch.upper\n    )\n    return right_of_mirror_patch.simple_query(\"What color is the curtain?\")"}, {"question": "Is the pillow in the top part or in the bottom of the picture?", "code": "def execute_command(image) -> str:\n    image_patch = ImagePatch(image)\n    pillow_patches = image_patch.find(\"pillow\")\n    pillow_patch = pillow_patches[0]\n    pillow_in_top_half = pillow_patch.vertical_center > image_patch.vertical_center\n    if pillow_in_top_half:\n        return \"top\"\n    else:\n        return \"bottom\""}]